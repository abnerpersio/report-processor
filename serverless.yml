org: abnerpersio
service: live039

useDotenv: true

provider:
  name: aws
  runtime: nodejs22.x
  architecture: arm64
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  memorySize: 128

  iam:
    role:
      statements:
        # DynamoDB
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Scan
          Resource: !GetAtt LeadsTable.Arn

        # SQS
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: !GetAtt GenerateReportQueue.Arn

        # S3
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:AbortMultipartUpload
          Resource:
            - !GetAtt ReportsBucket.Arn
            - !Join ['/', [!GetAtt ReportsBucket.Arn, '*']]

  environment:
    LEADS_TABLE: !Ref LeadsTable
    GENERATE_REPORT_QUEUE_URL: !Ref GenerateReportQueue
    REPORTS_BUCKET_NAME: !Ref ReportsBucket
    RESEND_API_KEY: ${env::RESEND_API_KEY}

package:
  individually: true

build:
  esbuild:
    bundle: true
    minify: true
    sourcemap: false
    external:
      - 'react'
      - 'react'
      - 'react-dom/server'
    exclude:
      - '@aws-sdk/*'

resources:
    - ${file(resources/dynamodb.yml)}
    - ${file(resources/queue.yml)}
    - ${file(resources/s3.yml)}

functions:
  populateDatabase:
    handler: src/functions/http/populate-database.handler
    timeout: 25
    events:
      - httpApi:
          path: /populate-database
          method: POST

  generateReport:
    handler: src/functions/http/generate-report.handler
    events:
      - httpApi:
          path: /generate-report
          method: POST

  processReport:
    handler: src/functions/queues/process-report.handler
    timeout: 180
    memorySize: 256
    events:
      - sqs:
          arn: !GetAtt GenerateReportQueue.Arn
          batchSize: 1

